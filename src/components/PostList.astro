---
import { type CollectionEntry } from 'astro:content';

type Props = {
	posts: CollectionEntry<'posts'>[];
};

const { posts } = Astro.props;

const today = new Date();
const dateString = (date: Date) => {
	const yr = date.getFullYear();
	const mo = date.getMonth() + 1;
	const da = date.getDate();

	if (yr === today.getFullYear()) return `${mo < 10 ? '0' : ''}${mo}-${da < 10 ? '0' : ''}${da}`;

	return `${yr}-${mo < 10 ? '0' : ''}${mo}-${da < 10 ? '0' : ''}${da}`;
};
---

<ul class='flex flex-col gap-4 font-body'>
	{
		posts
			.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf())
			.map(({ slug, data: { title, date, tags } }) => (
				<li class='flex place-content-baseline justify-between'>
					<div class='flex flex-wrap place-items-baseline gap-x-1'>
						<a class='text-lg' href={`/post/${slug}/`}>
							{title}
						</a>
						{tags.map(tag => (
							<a href={`/tagged/${tag}/`} class='rounded-full border border-gray-300 bg-slate-100 px-1 text-sm font-extralight text-gray-600'>
								{tag}
							</a>
						))}
					</div>
					<time class='flex-shrink-0 text-nowrap font-mono' datetime={date.toISOString()}>
						{dateString(date)}
					</time>
				</li>
			))
	}
</ul>
